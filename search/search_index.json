{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Repo: github.com/combe15/factorio-whiteboard</p> <p>Website: combe15.github.io/factorio-whiteboard</p> <p>This repository is a community-driven general-purpose collaboration of ideas for Factorio.</p>"},{"location":"#links","title":"Links","text":"<ul> <li>stevetrov's legendary builds</li> <li>Mulark's Benchmarks</li> <li>AssemblyStorm's Factorio (A'sF) Server Stuff</li> <li>FactorioBox (See how your hardware stacks up for factorio performance)</li> <li>Kirk McDonald Calculator</li> <li>Make Text Messages with Combinators</li> <li>Make Logistics Requests Scripts</li> <li>Huge Pages Tutorial in Technical Factorio discord</li> <li>Factorio Blueprint Translator</li> </ul>"},{"location":"assemblystorm/","title":"AssemblyStorm","text":"<p>All things AssemblyStorm Factorio</p> <ul> <li> <p>Grafana dashboard grafana.kilen.me</p> </li> <li> <p>Discord: discord.gg/ZwMvyrs</p> </li> <li> <p>Autosaves: factorio.kilen.me/saves</p> </li> <li> <p>Archives: factorio.kilen.me/archive</p> </li> </ul>"},{"location":"typesetter/","title":"Typesetter","text":"Factorio Typesetter Text ABCDEFGHIJKLM NOPQRSTUVWXYZ abcdefghijklm nopqrstuvwxyz 1234567890.,- Font Kerning        Usefont metrics (snap-to-grid bounding box)             Use fixed width and height      Letter spacing (default 0) Line spacing (default 0) Create blueprint Blueprint string Blueprint preview"},{"location":"benchmarks/2022-03-05/","title":"2022-03-05","text":""},{"location":"benchmarks/2022-03-05/#maps","title":"Maps","text":"<p>drive.google.com/drive/folders/1VyAQ8dLk5bpSIoZD_FB5sYVPUcYw2AQn</p>"},{"location":"benchmarks/2022-03-05/#command","title":"Command","text":"<pre><code>$ ./factoriohugetlbfs.sh --benchmark ./factorio-1.1.55/saves/1504\\ only.zip &amp;&amp; \\\n  ./factoriohugetlbfs.sh --benchmark ./factorio-1.1.55/saves/500\\ only.zip &amp;&amp; \\\n  ./factoriohugetlbfs.sh --benchmark ./factorio-1.1.55/saves/960\\ only.zip &amp;&amp;  \\\n  ./factoriohugetlbfs.sh --benchmark ./factorio-1.1.55/saves/1k\\ belt\\ only.zip\n</code></pre>"},{"location":"benchmarks/2022-03-05/#results","title":"Results","text":"<pre><code>                           spm/1000 tick runtime (higher is better)\n1504 (8x bob)      1786 ms 0.842\n500  (trov)         370 ms 1.351\n960  (lichtaxers)  1106 ms 0.868\n1000 (flame belt)   647 ms 1.546\n</code></pre>"},{"location":"blueprints/","title":"Blueprints","text":"<p>Blueprint pages are automatically created by the <code>gen_indexes.py</code> script.</p> <p>To add a new blueprint, create a file containing the blueprint string in the <code>blueprints/</code> directory.</p>"},{"location":"blueprints/#how-blueprint-pages-work","title":"How blueprint pages work","text":"<ol> <li>The mkdocs-gen-files script creates a page stub in <code>docs/blueprints/{basename}.md</code> and also copies the blueprint string to the static assets as a text file <code>doc/assets/{basename}.txt</code></li> <li>The stub document has an empty code fence for the blueprint string and an embedded <code>&lt;script&gt;</code> that calls <code>processBlueprint(basename)</code> which is a function defined in <code>docs/assets/blueprint.js</code>. </li> <li>The script also populates code fence with the blueprint string which is fetched from <code>doc/assets/{basename}.txt</code> using an XMLHttpRequest after the page is loaded. </li> <li>The <code>processBlueprint()</code> function deserializes the blueprint string and renders the html representation of the blueprint data.</li> <li>Blueprint previews are left as image stubs with a <code>window.setTimeout()</code> function that staggers requests to the blueprint preview server to fetch image data, defined in <code>doc/assets/factorio.js</code> as the constant <code>FBSR_SERVER</code>.</li> </ol>"},{"location":"lua_scripts/","title":"Lua scripts","text":"<p>Lua script pages are automatically created by the <code>gen_indexes.py</code> script.</p> <p>To add a new script, create a <code>.lua</code> file containing the script in the <code>lua/</code> directory.</p>"},{"location":"lua_scripts/Backup%20logistics%20requests/","title":"Backup logistics requests","text":"./lua/Backup logistics requests.lua<pre><code>/silent-command\na='/silent-command\\nlocal p = game.player\\nlocal c = p.clear_personal_logistic_slot\\nlocal s = p.set_personal_logistic_slot for k = 1, 1000 do c(k) end;\\n' \nfor i=1, 1000, 1 do \n    slot = game.player.get_personal_logistic_slot(i)\n    if slot.name then \n        a = a .. string.format(\n            \"s( %d, {max = %d, min = %d, name = \\\"%s\\\"});\\n\", \n            i, slot.max, slot.min, slot.name )  \n    end\nend \ngame.write_file(\"player_logistic_request_slots_command.txt\",a)\n</code></pre>"},{"location":"lua_scripts/Spider%20requester%20slots/","title":"Spider requester slots","text":"./lua/Spider requester slots.lua<pre><code>/silent-command\n--[[ \n  Hover mouse over spidertron during use of this command.\n\n  Creates and modifies Logistic slots in a spidertron.\n]]\nfor k = 1, 1000 do game.player.selected.clear_vehicle_logistic_slot(k) end;\n\ngame.player.selected.set_vehicle_logistic_slot( 1, {max = 0, min = 0, name = \"wooden-chest\"})\ngame.player.selected.set_vehicle_logistic_slot( 2, {max = 0, min = 0, name = \"iron-chest\"})\ngame.player.selected.set_vehicle_logistic_slot( 3, {max = 0, min = 0, name = \"steel-chest\"})\ngame.player.selected.set_vehicle_logistic_slot( 4, {max = 0, min = 0, name = \"storage-tank\"})\ngame.player.selected.set_vehicle_logistic_slot( 11, {max = 0, min = 0, name = \"transport-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 12, {max = 0, min = 0, name = \"underground-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 13, {max = 0, min = 0, name = \"splitter\"})\ngame.player.selected.set_vehicle_logistic_slot( 14, {max = 0, min = 0, name = \"fast-transport-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 15, {max = 0, min = 0, name = \"fast-underground-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 16, {max = 0, min = 0, name = \"fast-splitter\"})\ngame.player.selected.set_vehicle_logistic_slot( 17, {max = 0, min = 0, name = \"express-transport-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 18, {max = 0, min = 0, name = \"express-underground-belt\"})\ngame.player.selected.set_vehicle_logistic_slot( 19, {max = 0, min = 0, name = \"express-splitter\"})\ngame.player.selected.set_vehicle_logistic_slot( 21, {max = 0, min = 0, name = \"burner-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 22, {max = 0, min = 0, name = \"inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 23, {max = 0, min = 0, name = \"long-handed-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 24, {max = 0, min = 0, name = \"fast-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 25, {max = 0, min = 0, name = \"filter-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 26, {max = 0, min = 0, name = \"stack-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 27, {max = 0, min = 0, name = \"stack-filter-inserter\"})\ngame.player.selected.set_vehicle_logistic_slot( 31, {max = 0, min = 0, name = \"small-electric-pole\"})\ngame.player.selected.set_vehicle_logistic_slot( 32, {max = 0, min = 0, name = \"medium-electric-pole\"})\ngame.player.selected.set_vehicle_logistic_slot( 33, {max = 0, min = 0, name = \"big-electric-pole\"})\ngame.player.selected.set_vehicle_logistic_slot( 34, {max = 0, min = 0, name = \"substation\"})\ngame.player.selected.set_vehicle_logistic_slot( 38, {max = 0, min = 0, name = \"pipe\"})\ngame.player.selected.set_vehicle_logistic_slot( 39, {max = 0, min = 0, name = \"pipe-to-ground\"})\ngame.player.selected.set_vehicle_logistic_slot( 40, {max = 0, min = 0, name = \"pump\"})\ngame.player.selected.set_vehicle_logistic_slot( 41, {max = 0, min = 0, name = \"rail\"})\ngame.player.selected.set_vehicle_logistic_slot( 42, {max = 0, min = 0, name = \"train-stop\"})\ngame.player.selected.set_vehicle_logistic_slot( 43, {max = 0, min = 0, name = \"rail-signal\"})\ngame.player.selected.set_vehicle_logistic_slot( 44, {max = 0, min = 0, name = \"rail-chain-signal\"})\ngame.player.selected.set_vehicle_logistic_slot( 45, {max = 0, min = 0, name = \"locomotive\"})\ngame.player.selected.set_vehicle_logistic_slot( 46, {max = 0, min = 0, name = \"cargo-wagon\"})\ngame.player.selected.set_vehicle_logistic_slot( 47, {max = 0, min = 0, name = \"fluid-wagon\"})\ngame.player.selected.set_vehicle_logistic_slot( 48, {max = 0, min = 0, name = \"artillery-wagon\"})\ngame.player.selected.set_vehicle_logistic_slot( 51, {max = 0, min = 0, name = \"car\"})\ngame.player.selected.set_vehicle_logistic_slot( 52, {max = 0, min = 0, name = \"tank\"})\ngame.player.selected.set_vehicle_logistic_slot( 53, {max = 0, min = 0, name = \"spidertron\"})\ngame.player.selected.set_vehicle_logistic_slot( 54, {max = 0, min = 0, name = \"spidertron-remote\"})\ngame.player.selected.set_vehicle_logistic_slot( 61, {max = 0, min = 0, name = \"logistic-robot\"})\ngame.player.selected.set_vehicle_logistic_slot( 62, {max = 0, min = 0, name = \"construction-robot\"})\ngame.player.selected.set_vehicle_logistic_slot( 63, {max = 0, min = 0, name = \"logistic-chest-active-provider\"})\ngame.player.selected.set_vehicle_logistic_slot( 64, {max = 0, min = 0, name = \"logistic-chest-passive-provider\"})\ngame.player.selected.set_vehicle_logistic_slot( 65, {max = 0, min = 0, name = \"logistic-chest-storage\"})\ngame.player.selected.set_vehicle_logistic_slot( 66, {max = 0, min = 0, name = \"logistic-chest-buffer\"})\ngame.player.selected.set_vehicle_logistic_slot( 67, {max = 0, min = 0, name = \"logistic-chest-requester\"})\ngame.player.selected.set_vehicle_logistic_slot( 68, {max = 0, min = 0, name = \"roboport\"})\ngame.player.selected.set_vehicle_logistic_slot( 71, {max = 0, min = 0, name = \"small-lamp\"})\ngame.player.selected.set_vehicle_logistic_slot( 72, {max = 0, min = 0, name = \"red-wire\"})\ngame.player.selected.set_vehicle_logistic_slot( 73, {max = 0, min = 0, name = \"green-wire\"})\ngame.player.selected.set_vehicle_logistic_slot( 74, {max = 0, min = 0, name = \"arithmetic-combinator\"})\ngame.player.selected.set_vehicle_logistic_slot( 75, {max = 0, min = 0, name = \"decider-combinator\"})\ngame.player.selected.set_vehicle_logistic_slot( 76, {max = 0, min = 0, name = \"constant-combinator\"})\ngame.player.selected.set_vehicle_logistic_slot( 77, {max = 0, min = 0, name = \"power-switch\"})\ngame.player.selected.set_vehicle_logistic_slot( 78, {max = 0, min = 0, name = \"programmable-speaker\"})\ngame.player.selected.set_vehicle_logistic_slot( 81, {max = 0, min = 0, name = \"stone-brick\"})\ngame.player.selected.set_vehicle_logistic_slot( 82, {max = 0, min = 0, name = \"concrete\"})\ngame.player.selected.set_vehicle_logistic_slot( 83, {max = 0, min = 0, name = \"hazard-concrete\"})\ngame.player.selected.set_vehicle_logistic_slot( 84, {max = 0, min = 0, name = \"refined-concrete\"})\ngame.player.selected.set_vehicle_logistic_slot( 85, {max = 0, min = 0, name = \"refined-hazard-concrete\"})\ngame.player.selected.set_vehicle_logistic_slot( 86, {max = 0, min = 0, name = \"landfill\"})\ngame.player.selected.set_vehicle_logistic_slot( 87, {max = 0, min = 0, name = \"cliff-explosives\"})\ngame.player.selected.set_vehicle_logistic_slot( 91, {max = 0, min = 0, name = \"repair-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 92, {max = 0, min = 0, name = \"boiler\"})\ngame.player.selected.set_vehicle_logistic_slot( 93, {max = 0, min = 0, name = \"steam-engine\"})\ngame.player.selected.set_vehicle_logistic_slot( 94, {max = 0, min = 0, name = \"solar-panel\"})\ngame.player.selected.set_vehicle_logistic_slot( 95, {max = 0, min = 0, name = \"accumulator\"})\ngame.player.selected.set_vehicle_logistic_slot( 96, {max = 0, min = 0, name = \"nuclear-reactor\"})\ngame.player.selected.set_vehicle_logistic_slot( 97, {max = 0, min = 0, name = \"heat-pipe\"})\ngame.player.selected.set_vehicle_logistic_slot( 98, {max = 0, min = 0, name = \"heat-exchanger\"})\ngame.player.selected.set_vehicle_logistic_slot( 99, {max = 0, min = 0, name = \"steam-turbine\"})\ngame.player.selected.set_vehicle_logistic_slot( 101, {max = 0, min = 0, name = \"burner-mining-drill\"})\ngame.player.selected.set_vehicle_logistic_slot( 102, {max = 0, min = 0, name = \"electric-mining-drill\"})\ngame.player.selected.set_vehicle_logistic_slot( 103, {max = 0, min = 0, name = \"offshore-pump\"})\ngame.player.selected.set_vehicle_logistic_slot( 104, {max = 0, min = 0, name = \"pumpjack\"})\ngame.player.selected.set_vehicle_logistic_slot( 105, {max = 0, min = 0, name = \"stone-furnace\"})\ngame.player.selected.set_vehicle_logistic_slot( 106, {max = 0, min = 0, name = \"steel-furnace\"})\ngame.player.selected.set_vehicle_logistic_slot( 107, {max = 0, min = 0, name = \"electric-furnace\"})\ngame.player.selected.set_vehicle_logistic_slot( 111, {max = 0, min = 0, name = \"assembling-machine-1\"})\ngame.player.selected.set_vehicle_logistic_slot( 112, {max = 0, min = 0, name = \"assembling-machine-2\"})\ngame.player.selected.set_vehicle_logistic_slot( 113, {max = 0, min = 0, name = \"assembling-machine-3\"})\ngame.player.selected.set_vehicle_logistic_slot( 114, {max = 0, min = 0, name = \"oil-refinery\"})\ngame.player.selected.set_vehicle_logistic_slot( 115, {max = 0, min = 0, name = \"chemical-plant\"})\ngame.player.selected.set_vehicle_logistic_slot( 116, {max = 0, min = 0, name = \"centrifuge\"})\ngame.player.selected.set_vehicle_logistic_slot( 117, {max = 0, min = 0, name = \"lab\"})\ngame.player.selected.set_vehicle_logistic_slot( 120, {max = 0, min = 0, name = \"rocket-silo\"})\ngame.player.selected.set_vehicle_logistic_slot( 121, {max = 0, min = 0, name = \"beacon\"})\ngame.player.selected.set_vehicle_logistic_slot( 122, {max = 0, min = 0, name = \"speed-module\"})\ngame.player.selected.set_vehicle_logistic_slot( 123, {max = 0, min = 0, name = \"speed-module-2\"})\ngame.player.selected.set_vehicle_logistic_slot( 124, {max = 0, min = 0, name = \"speed-module-3\"})\ngame.player.selected.set_vehicle_logistic_slot( 125, {max = 0, min = 0, name = \"effectivity-module\"})\ngame.player.selected.set_vehicle_logistic_slot( 126, {max = 0, min = 0, name = \"effectivity-module-2\"})\ngame.player.selected.set_vehicle_logistic_slot( 127, {max = 0, min = 0, name = \"effectivity-module-3\"})\ngame.player.selected.set_vehicle_logistic_slot( 128, {max = 0, min = 0, name = \"productivity-module\"})\ngame.player.selected.set_vehicle_logistic_slot( 129, {max = 0, min = 0, name = \"productivity-module-2\"})\ngame.player.selected.set_vehicle_logistic_slot( 130, {max = 0, min = 0, name = \"productivity-module-3\"})\ngame.player.selected.set_vehicle_logistic_slot( 131, {max = 0, min = 0, name = \"pistol\"})\ngame.player.selected.set_vehicle_logistic_slot( 132, {max = 0, min = 0, name = \"submachine-gun\"})\ngame.player.selected.set_vehicle_logistic_slot( 133, {max = 0, min = 0, name = \"rocket-launcher\"})\ngame.player.selected.set_vehicle_logistic_slot( 134, {max = 0, min = 0, name = \"shotgun\"})\ngame.player.selected.set_vehicle_logistic_slot( 135, {max = 0, min = 0, name = \"combat-shotgun\"})\ngame.player.selected.set_vehicle_logistic_slot( 136, {max = 0, min = 0, name = \"flamethrower\"})\ngame.player.selected.set_vehicle_logistic_slot( 137, {max = 0, min = 0, name = \"land-mine\"})\ngame.player.selected.set_vehicle_logistic_slot( 141, {max = 0, min = 0, name = \"firearm-magazine\"})\ngame.player.selected.set_vehicle_logistic_slot( 142, {max = 0, min = 0, name = \"piercing-rounds-magazine\"})\ngame.player.selected.set_vehicle_logistic_slot( 143, {max = 0, min = 0, name = \"uranium-rounds-magazine\"})\ngame.player.selected.set_vehicle_logistic_slot( 144, {max = 0, min = 0, name = \"shotgun-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 145, {max = 0, min = 0, name = \"piercing-shotgun-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 146, {max = 0, min = 0, name = \"cannon-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 147, {max = 0, min = 0, name = \"explosive-cannon-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 148, {max = 0, min = 0, name = \"uranium-cannon-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 149, {max = 0, min = 0, name = \"explosive-uranium-cannon-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 150, {max = 0, min = 0, name = \"artillery-shell\"})\ngame.player.selected.set_vehicle_logistic_slot( 151, {max = 0, min = 0, name = \"rocket\"})\ngame.player.selected.set_vehicle_logistic_slot( 152, {max = 0, min = 0, name = \"explosive-rocket\"})\ngame.player.selected.set_vehicle_logistic_slot( 153, {max = 0, min = 0, name = \"atomic-bomb\"})\ngame.player.selected.set_vehicle_logistic_slot( 154, {max = 0, min = 0, name = \"flamethrower-ammo\"})\ngame.player.selected.set_vehicle_logistic_slot( 161, {max = 0, min = 0, name = \"grenade\"})\ngame.player.selected.set_vehicle_logistic_slot( 162, {max = 0, min = 0, name = \"cluster-grenade\"})\ngame.player.selected.set_vehicle_logistic_slot( 163, {max = 0, min = 0, name = \"poison-capsule\"})\ngame.player.selected.set_vehicle_logistic_slot( 164, {max = 0, min = 0, name = \"slowdown-capsule\"})\ngame.player.selected.set_vehicle_logistic_slot( 165, {max = 0, min = 0, name = \"defender-capsule\"})\ngame.player.selected.set_vehicle_logistic_slot( 166, {max = 0, min = 0, name = \"distractor-capsule\"})\ngame.player.selected.set_vehicle_logistic_slot( 167, {max = 0, min = 0, name = \"destroyer-capsule\"})\ngame.player.selected.set_vehicle_logistic_slot( 171, {max = 0, min = 0, name = \"light-armor\"})\ngame.player.selected.set_vehicle_logistic_slot( 172, {max = 0, min = 0, name = \"heavy-armor\"})\ngame.player.selected.set_vehicle_logistic_slot( 173, {max = 0, min = 0, name = \"modular-armor\"})\ngame.player.selected.set_vehicle_logistic_slot( 174, {max = 0, min = 0, name = \"power-armor\"})\ngame.player.selected.set_vehicle_logistic_slot( 175, {max = 0, min = 0, name = \"power-armor-mk2\"})\ngame.player.selected.set_vehicle_logistic_slot( 181, {max = 0, min = 0, name = \"solar-panel-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 182, {max = 0, min = 0, name = \"fusion-reactor-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 183, {max = 0, min = 0, name = \"battery-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 184, {max = 0, min = 0, name = \"battery-mk2-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 185, {max = 0, min = 0, name = \"belt-immunity-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 186, {max = 0, min = 0, name = \"exoskeleton-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 187, {max = 0, min = 0, name = \"personal-roboport-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 188, {max = 0, min = 0, name = \"personal-roboport-mk2-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 189, {max = 0, min = 0, name = \"night-vision-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 191, {max = 0, min = 0, name = \"energy-shield-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 192, {max = 0, min = 0, name = \"energy-shield-mk2-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 193, {max = 0, min = 0, name = \"personal-laser-defense-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 194, {max = 0, min = 0, name = \"discharge-defense-equipment\"})\ngame.player.selected.set_vehicle_logistic_slot( 195, {max = 0, min = 0, name = \"discharge-defense-remote\"})\ngame.player.selected.set_vehicle_logistic_slot( 201, {max = 0, min = 0, name = \"stone-wall\"})\ngame.player.selected.set_vehicle_logistic_slot( 202, {max = 0, min = 0, name = \"gate\"})\ngame.player.selected.set_vehicle_logistic_slot( 203, {max = 0, min = 0, name = \"gun-turret\"})\ngame.player.selected.set_vehicle_logistic_slot( 204, {max = 0, min = 0, name = \"laser-turret\"})\ngame.player.selected.set_vehicle_logistic_slot( 205, {max = 0, min = 0, name = \"flamethrower-turret\"})\ngame.player.selected.set_vehicle_logistic_slot( 206, {max = 0, min = 0, name = \"artillery-turret\"})\ngame.player.selected.set_vehicle_logistic_slot( 207, {max = 0, min = 0, name = \"artillery-targeting-remote\"})\ngame.player.selected.set_vehicle_logistic_slot( 208, {max = 0, min = 0, name = \"radar\"})\ngame.player.selected.set_vehicle_logistic_slot( 211, {max = 0, min = 0, name = \"wood\"})\ngame.player.selected.set_vehicle_logistic_slot( 212, {max = 0, min = 0, name = \"coal\"})\ngame.player.selected.set_vehicle_logistic_slot( 213, {max = 0, min = 0, name = \"stone\"})\ngame.player.selected.set_vehicle_logistic_slot( 214, {max = 0, min = 0, name = \"iron-ore\"})\ngame.player.selected.set_vehicle_logistic_slot( 215, {max = 0, min = 0, name = \"copper-ore\"})\ngame.player.selected.set_vehicle_logistic_slot( 216, {max = 0, min = 0, name = \"uranium-ore\"})\ngame.player.selected.set_vehicle_logistic_slot( 217, {max = 0, min = 0, name = \"raw-fish\"})\ngame.player.selected.set_vehicle_logistic_slot( 221, {max = 0, min = 0, name = \"iron-plate\"})\ngame.player.selected.set_vehicle_logistic_slot( 222, {max = 0, min = 0, name = \"copper-plate\"})\ngame.player.selected.set_vehicle_logistic_slot( 223, {max = 0, min = 0, name = \"solid-fuel\"})\ngame.player.selected.set_vehicle_logistic_slot( 224, {max = 0, min = 0, name = \"steel-plate\"})\ngame.player.selected.set_vehicle_logistic_slot( 225, {max = 0, min = 0, name = \"plastic-bar\"})\ngame.player.selected.set_vehicle_logistic_slot( 226, {max = 0, min = 0, name = \"sulfur\"})\ngame.player.selected.set_vehicle_logistic_slot( 227, {max = 0, min = 0, name = \"battery\"})\ngame.player.selected.set_vehicle_logistic_slot( 228, {max = 0, min = 0, name = \"explosives\"})\ngame.player.selected.set_vehicle_logistic_slot( 231, {max = 0, min = 0, name = \"crude-oil-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 232, {max = 0, min = 0, name = \"heavy-oil-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 233, {max = 0, min = 0, name = \"light-oil-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 234, {max = 0, min = 0, name = \"lubricant-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 235, {max = 0, min = 0, name = \"petroleum-gas-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 236, {max = 0, min = 0, name = \"sulfuric-acid-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 237, {max = 0, min = 0, name = \"water-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 241, {max = 0, min = 0, name = \"copper-cable\"})\ngame.player.selected.set_vehicle_logistic_slot( 242, {max = 0, min = 0, name = \"iron-stick\"})\ngame.player.selected.set_vehicle_logistic_slot( 243, {max = 0, min = 0, name = \"iron-gear-wheel\"})\ngame.player.selected.set_vehicle_logistic_slot( 244, {max = 0, min = 0, name = \"empty-barrel\"})\ngame.player.selected.set_vehicle_logistic_slot( 245, {max = 0, min = 0, name = \"electronic-circuit\"})\ngame.player.selected.set_vehicle_logistic_slot( 246, {max = 0, min = 0, name = \"advanced-circuit\"})\ngame.player.selected.set_vehicle_logistic_slot( 247, {max = 0, min = 0, name = \"processing-unit\"})\ngame.player.selected.set_vehicle_logistic_slot( 248, {max = 0, min = 0, name = \"engine-unit\"})\ngame.player.selected.set_vehicle_logistic_slot( 249, {max = 0, min = 0, name = \"electric-engine-unit\"})\ngame.player.selected.set_vehicle_logistic_slot( 250, {max = 0, min = 0, name = \"flying-robot-frame\"})\ngame.player.selected.set_vehicle_logistic_slot( 251, {max = 0, min = 0, name = \"rocket-control-unit\"})\ngame.player.selected.set_vehicle_logistic_slot( 252, {max = 0, min = 0, name = \"low-density-structure\"})\ngame.player.selected.set_vehicle_logistic_slot( 253, {max = 0, min = 0, name = \"rocket-fuel\"})\ngame.player.selected.set_vehicle_logistic_slot( 254, {max = 0, min = 0, name = \"nuclear-fuel\"})\ngame.player.selected.set_vehicle_logistic_slot( 255, {max = 0, min = 0, name = \"uranium-235\"})\ngame.player.selected.set_vehicle_logistic_slot( 256, {max = 0, min = 0, name = \"uranium-238\"})\ngame.player.selected.set_vehicle_logistic_slot( 257, {max = 0, min = 0, name = \"uranium-fuel-cell\"})\ngame.player.selected.set_vehicle_logistic_slot( 258, {max = 0, min = 0, name = \"used-up-uranium-fuel-cell\"})\ngame.player.selected.set_vehicle_logistic_slot( 261, {max = 0, min = 0, name = \"automation-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 262, {max = 0, min = 0, name = \"logistic-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 263, {max = 0, min = 0, name = \"military-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 264, {max = 0, min = 0, name = \"chemical-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 265, {max = 0, min = 0, name = \"production-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 266, {max = 0, min = 0, name = \"utility-science-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 267, {max = 0, min = 0, name = \"space-science-pack\"})\n\ngame.player.selected.set_vehicle_logistic_slot( 33, {max = 100, min = 100, name = \"big-electric-pole\"})\ngame.player.selected.set_vehicle_logistic_slot( 39, {max = 200, min = 200, name = \"pipe-to-ground\"})\ngame.player.selected.set_vehicle_logistic_slot( 41, {max = 2000, min = 2000, name = \"rail\"})\ngame.player.selected.set_vehicle_logistic_slot( 42, {max = 10, min = 10, name = \"train-stop\"})\ngame.player.selected.set_vehicle_logistic_slot( 43, {max = 100, min = 100, name = \"rail-signal\"})\ngame.player.selected.set_vehicle_logistic_slot( 44, {max = 100, min = 100, name = \"rail-chain-signal\"})\ngame.player.selected.set_vehicle_logistic_slot( 68, {max = 10, min = 10, name = \"roboport\"})\ngame.player.selected.set_vehicle_logistic_slot( 86, {max = 3000, min = 3000, name = \"landfill\"})\n\n\ngame.player.selected.set_vehicle_logistic_slot( 62, {max = 50, min = 50, name = \"construction-robot\"})\ngame.player.selected.set_vehicle_logistic_slot( 87, {max = 20, min = 20, name = \"cliff-explosives\"})\ngame.player.selected.set_vehicle_logistic_slot( 91, {max = 100, min = 100, name = \"repair-pack\"})\ngame.player.selected.set_vehicle_logistic_slot( 153, {max = 80, min = 80, name = \"atomic-bomb\"})\ngame.player.selected.set_vehicle_logistic_slot( 208, {max = 50, min = 50, name = \"radar\"})\n</code></pre>"},{"location":"lua_scripts/adds%20a%20query%20for%20modules/","title":"Adds a query for modules","text":"./lua/adds a query for modules.lua<pre><code>/silent-command\n--[[\n  adds a query for modules in drills and assembly machines\n  drills: 3x speed-module\n  assembly machines: 2x-4x productivity-module\n\n  go \"[gps=0,0.0][gps=32,-32.0]\"\n]]\nlocal player = game.player\nlocal module_allowed = {\n    [\"advanced-circuit\"] = true,\n    [\"automation-science-pack\"] = true,\n    [\"battery\"] = true,\n    [\"chemical-science-pack\"] = true,\n    [\"copper-cable\"] = true,\n    [\"copper-plate\"] = true,\n    [\"electric-engine-unit\"] = true,\n    [\"electronic-circuit\"] = true,\n    [\"empty-barrel\"] = true,\n    [\"engine-unit\"] = true,\n    [\"explosives\"] = true,\n    [\"flying-robot-frame\"] = true,\n    [\"iron-gear-wheel\"] = true,\n    [\"iron-plate\"] = true,\n    [\"iron-stick\"] = true,\n    [\"logistic-science-pack\"] = true,\n    [\"low-density-structure\"] = true,\n    [\"lubricant\"] = true,\n    [\"military-science-pack\"] = true,\n    [\"nuclear-fuel\"] = true,\n    [\"plastic-bar\"] = true,\n    [\"processing-unit\"] = true,\n    [\"production-science-pack\"] = true,\n    [\"rocket-control-unit\"] = true,\n    [\"rocket-fuel\"] = true,\n    [\"rocket-part\"] = true,\n    [\"steel-plate\"] = true,\n    [\"stone-brick\"] = true,\n    [\"sulfur\"] = true,\n    [\"sulfuric-acid\"] = true,\n    [\"uranium-fuel-cell\"] = true,\n    [\"utility-science-pack\"] = true,\n    [\"basic-oil-processing\"] = true,\n    [\"advanced-oil-processing\"] = true,\n    [\"coal-liquefaction\"] = true,\n    [\"heavy-oil-cracking\"] = true,\n    [\"light-oil-cracking\"] = true,\n    [\"solid-fuel-from-light-oil\"] = true,\n    [\"solid-fuel-from-petroleum-gas\"] = true,\n    [\"solid-fuel-from-heavy-oil\"] = true,\n    [\"uranium-processing\"] = true,\n    [\"nuclear-fuel-reprocessing\"] = true,\n    [\"kovarex-enrichment-process\"] = true\n}\n\nlocal function get_number_of_installed_modules(entity)\n    local number_of_modules = 0\n    for _, v in pairs(entity.get_module_inventory().get_contents()) do\n        number_of_modules = number_of_modules + v\n    end\n    return number_of_modules\nend\n\nlocal function create_request_for_modules(entity, modules)\n    entity.surface.create_entity {\n        name = \"item-request-proxy\",\n        target = entity,\n        position = entity.position,\n        force = entity.force,\n        modules = modules\n    }\nend\n\nlocal function create_request_for_modules_assembling_machine(entity, modules)\n    if entity.get_recipe() ~= nil and module_allowed[entity.get_recipe().name] then\n        local number_of_modules = modules - get_number_of_installed_modules(entity)\n        if number_of_modules &gt; 0 then\n            create_request_for_modules(entity, {[\"productivity-module\"] = number_of_modules})\n        end\n    end\nend\n\nlocal function get_area_from_gps_tags(s)\n    --[[\n        \"[gps=0,0.0][gps=32,-32.0]\" -&gt; { { \"0\", \"-32.0\" }, { \"32\", \"0.0\" } }\n    ]]\n    for x1, y1, x2, y2 in s:gmatch(\"%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+)%]%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+)%]\") do\n        return {{math.min(x1, x2), math.min(y1, y2)}, {math.max(x1, x2), math.max(y1, y2)}}\n    end\nend\n\nlocal function go(str)\n    local area_1 = get_area_from_gps_tags(str)\n    for _, entity in pairs(\n        player.surface.find_entities_filtered {\n            area = area_1,\n            name = {\"electric-mining-drill\", \"assembling-machine-2\", \"assembling-machine-3\"},\n            force = player.force\n        }\n    ) do\n        if entity.name == \"electric-mining-drill\" then\n            local number_of_modules = 3 - get_number_of_installed_modules(entity)\n            if number_of_modules &gt; 0 then\n                create_request_for_modules(entity, {[\"speed-module\"] = number_of_modules})\n            end\n        elseif entity.name == \"assembling-machine-2\" then\n            create_request_for_modules_assembling_machine(entity, 2)\n        elseif entity.name == \"assembling-machine-3\" then\n            create_request_for_modules_assembling_machine(entity, 4)\n        end\n    end\nend\n\ngo \"\n</code></pre>"},{"location":"lua_scripts/deconstruct_disconnected_solar/","title":"Deconstruct disconnected solar","text":"./lua/deconstruct_disconnected_solar.lua<pre><code>/c \nfor k,v in \n  pairs(game.player.surface.find_entities_filtered({name={'solar-panel','accumulator'}})) do \n  if not v.is_connected_to_electric_network() then \n    v.order_deconstruction(game.player.force) \n  end \nend\n</code></pre>"},{"location":"lua_scripts/delete%20chunks%20around%20box/","title":"Delete chunks around box","text":"./lua/delete chunks around box.lua<pre><code>/c\n--[[\n  optional but you may want to run it so biters won't be generated after chunks are removed\n]]\nlocal player = game.player\nlocal surface = player.surface\nsurface.clear_pollution()\nsurface.peaceful_mode = true\ngame.map_settings.pollution.enabled = false\ngame.map_settings.enemy_evolution.enabled = false\ngame.map_settings.enemy_expansion.enabled = false\nfor c in surface.get_chunks() do\nfor key, entity in   pairs(surface.find_entities_filtered({area={{c.x * 32, c.y * 32}, {c.x * 32 + 32, c.y * 32 + 32}}, force= \"enemy\"})) do\n   entity.destroy()\nend\nend\n\n/c\nltx = 227\nlty = 278\nrbx = 597\nrby = 3964\nfor chunk in game.player.surface.get_chunks() do\n  a = chunk.area\n  if not (a.left_top.x &gt; ltx and a.right_bottom.x &lt; rbx and\n    a.left_top.y &gt; lty and a.right_bottom.y &lt; rby) then\n    game.player.surface.delete_chunk({chunk.x, chunk.y})\n  end\nend\n</code></pre>"},{"location":"lua_scripts/early%20requests%20slots/","title":"Early requests slots","text":"./lua/early requests slots.lua<pre><code>/silent-command\n--[[ \n  Set your player logistic slots automaticly\n]]\nlocal p = game.player\nlocal c = p.clear_personal_logistic_slot\nlocal s = p.set_personal_logistic_slot\nfor k = 1, 1000 do c(k) end;\ns( 1, {max = 50, min = 50, name = \"wooden-chest\"})\ns( 2, {max = 0, min = 0, name = \"iron-chest\"})\ns( 3, {max = 50, min = 50, name = \"steel-chest\"})\ns( 4, {max = 50, min = 50, name = \"storage-tank\"})\ns( 11, {max = 100, min = 100, name = \"transport-belt\"})\ns( 12, {max = 50, min = 50, name = \"underground-belt\"})\ns( 13, {max = 50, min = 50, name = \"splitter\"})\ns( 14, {max = 100, min = 100, name = \"fast-transport-belt\"})\ns( 15, {max = 50, min = 50, name = \"fast-underground-belt\"})\ns( 16, {max = 50, min = 50, name = \"fast-splitter\"})\ns( 17, {max = 100, min = 100, name = \"express-transport-belt\"})\ns( 18, {max = 50, min = 50, name = \"express-underground-belt\"})\ns( 19, {max = 50, min = 50, name = \"express-splitter\"})\ns( 21, {max = 0, min = 0, name = \"burner-inserter\"})\ns( 22, {max = 50, min = 50, name = \"inserter\"})\ns( 23, {max = 50, min = 50, name = \"long-handed-inserter\"})\ns( 24, {max = 50, min = 50, name = \"fast-inserter\"})\ns( 25, {max = 50, min = 50, name = \"filter-inserter\"})\ns( 26, {max = 50, min = 50, name = \"stack-inserter\"})\ns( 27, {max = 50, min = 50, name = \"stack-filter-inserter\"})\ns( 31, {max = 50, min = 50, name = \"small-electric-pole\"})\ns( 32, {max = 50, min = 50, name = \"medium-electric-pole\"})\ns( 33, {max = 100, min = 100, name = \"big-electric-pole\"})\ns( 34, {max = 50, min = 50, name = \"substation\"})\ns( 38, {max = 100, min = 100, name = \"pipe\"})\ns( 39, {max = 50, min = 50, name = \"pipe-to-ground\"})\ns( 40, {max = 50, min = 50, name = \"pump\"})\ns( 41, {max = 900, min = 900, name = \"rail\"})\ns( 42, {max = 10, min = 10, name = \"train-stop\"})\ns( 43, {max = 50, min = 50, name = \"rail-signal\"})\ns( 44, {max = 50, min = 50, name = \"rail-chain-signal\"})\ns( 45, {max = 10, min = 10, name = \"locomotive\"})\ns( 46, {max = 20, min = 20, name = \"cargo-wagon\"})\ns( 47, {max = 10, min = 10, name = \"fluid-wagon\"})\ns( 48, {max = 0, min = 0, name = \"artillery-wagon\"})\ns( 51, {max = 0, min = 0, name = \"car\"})\ns( 52, {max = 0, min = 0, name = \"tank\"})\ns( 53, {max = 1, min = 1, name = \"spidertron\"})\ns( 54, {max = 1, min = 1, name = \"spidertron-remote\"})\ns( 61, {max = 50, min = 50, name = \"logistic-robot\"})\ns( 62, {max = 50, min = 50, name = \"construction-robot\"})\ns( 63, {max = 50, min = 50, name = \"logistic-chest-active-provider\"})\ns( 64, {max = 50, min = 50, name = \"logistic-chest-passive-provider\"})\ns( 65, {max = 50, min = 50, name = \"logistic-chest-storage\"})\ns( 66, {max = 50, min = 50, name = \"logistic-chest-buffer\"})\ns( 67, {max = 50, min = 50, name = \"logistic-chest-requester\"})\ns( 68, {max = 20, min = 20, name = \"roboport\"})\ns( 71, {max = 50, min = 50, name = \"small-lamp\"})\ns( 72, {max = 200, min = 200, name = \"red-wire\"})\ns( 73, {max = 200, min = 200, name = \"green-wire\"})\ns( 74, {max = 50, min = 50, name = \"arithmetic-combinator\"})\ns( 75, {max = 50, min = 50, name = \"decider-combinator\"})\ns( 76, {max = 50, min = 50, name = \"constant-combinator\"})\ns( 77, {max = 0, min = 0, name = \"power-switch\"})\ns( 78, {max = 50, min = 50, name = \"programmable-speaker\"})\ns( 81, {max = 0, min = 0, name = \"stone-brick\"})\ns( 82, {max = 0, min = 0, name = \"concrete\"})\ns( 83, {max = 0, min = 0, name = \"hazard-concrete\"})\ns( 84, {max = 0, min = 0, name = \"refined-concrete\"})\ns( 85, {max = 0, min = 0, name = \"refined-hazard-concrete\"})\ns( 86, {max = 100, min = 100, name = \"landfill\"})\ns( 87, {max = 20, min = 20, name = \"cliff-explosives\"})\ns( 91, {max = 100, min = 100, name = \"repair-pack\"})\ns( 92, {max = 0, min = 0, name = \"boiler\"})\ns( 93, {max = 0, min = 0, name = \"steam-engine\"})\ns( 94, {max = 50, min = 50, name = \"solar-panel\"})\ns( 95, {max = 50, min = 50, name = \"accumulator\"})\ns( 96, {max = 0, min = 0, name = \"nuclear-reactor\"})\ns( 97, {max = 0, min = 0, name = \"heat-pipe\"})\ns( 98, {max = 0, min = 0, name = \"heat-exchanger\"})\ns( 99, {max = 0, min = 0, name = \"steam-turbine\"})\ns( 101, {max = 0, min = 0, name = \"burner-mining-drill\"})\ns( 102, {max = 50, min = 50, name = \"electric-mining-drill\"})\ns( 103, {max = 20, min = 20, name = \"offshore-pump\"})\ns( 104, {max = 0, min = 0, name = \"pumpjack\"})\ns( 105, {max = 0, min = 0, name = \"stone-furnace\"})\ns( 106, {max = 0, min = 0, name = \"steel-furnace\"})\ns( 107, {max = 50, min = 50, name = \"electric-furnace\"})\ns( 111, {max = 0, min = 0, name = \"assembling-machine-1\"})\ns( 112, {max = 50, min = 50, name = \"assembling-machine-2\"})\ns( 113, {max = 50, min = 50, name = \"assembling-machine-3\"})\ns( 114, {max = 10, min = 10, name = \"oil-refinery\"})\ns( 115, {max = 10, min = 10, name = \"chemical-plant\"})\ns( 116, {max = 0, min = 0, name = \"centrifuge\"})\ns( 117, {max = 0, min = 0, name = \"lab\"})\ns( 120, {max = 0, min = 0, name = \"rocket-silo\"})\ns( 121, {max = 0, min = 0, name = \"beacon\"})\ns( 122, {max = 50, min = 50, name = \"speed-module\"})\ns( 123, {max = 0, min = 0, name = \"speed-module-2\"})\ns( 124, {max = 50, min = 50, name = \"speed-module-3\"})\ns( 125, {max = 0, min = 0, name = \"effectivity-module\"})\ns( 126, {max = 0, min = 0, name = \"effectivity-module-2\"})\ns( 127, {max = 0, min = 0, name = \"effectivity-module-3\"})\ns( 128, {max = 50, min = 50, name = \"productivity-module\"})\ns( 129, {max = 0, min = 0, name = \"productivity-module-2\"})\ns( 130, {max = 50, min = 50, name = \"productivity-module-3\"})\ns( 131, {max = 0, min = 0, name = \"pistol\"})\ns( 132, {max = 0, min = 0, name = \"submachine-gun\"})\ns( 133, {max = 0, min = 0, name = \"rocket-launcher\"})\ns( 134, {max = 0, min = 0, name = \"shotgun\"})\ns( 135, {max = 0, min = 0, name = \"combat-shotgun\"})\ns( 136, {max = 0, min = 0, name = \"flamethrower\"})\ns( 137, {max = 0, min = 0, name = \"land-mine\"})\ns( 141, {max = 0, min = 0, name = \"firearm-magazine\"})\ns( 142, {max = 0, min = 0, name = \"piercing-rounds-magazine\"})\ns( 143, {max = 0, min = 0, name = \"uranium-rounds-magazine\"})\ns( 144, {max = 0, min = 0, name = \"shotgun-shell\"})\ns( 145, {max = 0, min = 0, name = \"piercing-shotgun-shell\"})\ns( 146, {max = 0, min = 0, name = \"cannon-shell\"})\ns( 147, {max = 0, min = 0, name = \"explosive-cannon-shell\"})\ns( 148, {max = 0, min = 0, name = \"uranium-cannon-shell\"})\ns( 149, {max = 0, min = 0, name = \"explosive-uranium-cannon-shell\"})\ns( 150, {max = 0, min = 0, name = \"artillery-shell\"})\ns( 151, {max = 0, min = 0, name = \"rocket\"})\ns( 152, {max = 0, min = 0, name = \"explosive-rocket\"})\ns( 153, {max = 0, min = 0, name = \"atomic-bomb\"})\ns( 154, {max = 0, min = 0, name = \"flamethrower-ammo\"})\ns( 161, {max = 0, min = 0, name = \"grenade\"})\ns( 162, {max = 0, min = 0, name = \"cluster-grenade\"})\ns( 163, {max = 0, min = 0, name = \"poison-capsule\"})\ns( 164, {max = 0, min = 0, name = \"slowdown-capsule\"})\ns( 165, {max = 0, min = 0, name = \"defender-capsule\"})\ns( 166, {max = 0, min = 0, name = \"distractor-capsule\"})\ns( 167, {max = 0, min = 0, name = \"destroyer-capsule\"})\ns( 171, {max = 0, min = 0, name = \"light-armor\"})\ns( 172, {max = 0, min = 0, name = \"heavy-armor\"})\ns( 173, {max = 1, min = 1, name = \"modular-armor\"})\ns( 174, {max = 1, min = 1, name = \"power-armor\"})\ns( 175, {max = 1, min = 1, name = \"power-armor-mk2\"})\ns( 181, {max = 20, min = 20, name = \"solar-panel-equipment\"})\ns( 182, {max = 20, min = 20, name = \"fusion-reactor-equipment\"})\ns( 183, {max = 2, min = 2, name = \"battery-equipment\"})\ns( 184, {max = 20, min = 20, name = \"battery-mk2-equipment\"})\ns( 185, {max = 0, min = 0, name = \"belt-immunity-equipment\"})\ns( 186, {max = 20, min = 20, name = \"exoskeleton-equipment\"})\ns( 187, {max = 2, min = 2, name = \"personal-roboport-equipment\"})\ns( 188, {max = 20, min = 20, name = \"personal-roboport-mk2-equipment\"})\ns( 189, {max = 2, min = 2, name = \"night-vision-equipment\"})\ns( 191, {max = 0, min = 0, name = \"energy-shield-equipment\"})\ns( 192, {max = 20, min = 20, name = \"energy-shield-mk2-equipment\"})\ns( 193, {max = 20, min = 20, name = \"personal-laser-defense-equipment\"})\ns( 194, {max = 0, min = 0, name = \"discharge-defense-equipment\"})\ns( 195, {max = 0, min = 0, name = \"discharge-defense-remote\"})\ns( 201, {max = 100, min = 100, name = \"stone-wall\"})\ns( 202, {max = 0, min = 0, name = \"gate\"})\ns( 203, {max = 50, min = 50, name = \"gun-turret\"})\ns( 204, {max = 100, min = 100, name = \"laser-turret\"})\ns( 205, {max = 0, min = 0, name = \"flamethrower-turret\"})\ns( 206, {max = 0, min = 0, name = \"artillery-turret\"})\ns( 207, {max = 0, min = 0, name = \"artillery-targeting-remote\"})\ns( 208, {max = 50, min = 50, name = \"radar\"})\ns( 211, {max = 100, min = 100, name = \"wood\"})\ns( 212, {max = 0, min = 0, name = \"coal\"})\ns( 213, {max = 50, min = 50, name = \"stone\"})\ns( 214, {max = 0, min = 0, name = \"iron-ore\"})\ns( 215, {max = 0, min = 0, name = \"copper-ore\"})\ns( 216, {max = 0, min = 0, name = \"uranium-ore\"})\ns( 217, {max = 0, min = 0, name = \"raw-fish\"})\ns( 221, {max = 100, min = 100, name = \"iron-plate\"})\ns( 222, {max = 100, min = 100, name = \"copper-plate\"})\ns( 223, {max = 0, min = 0, name = \"solid-fuel\"})\ns( 224, {max = 100, min = 100, name = \"steel-plate\"})\ns( 225, {max = 0, min = 0, name = \"plastic-bar\"})\ns( 226, {max = 0, min = 0, name = \"sulfur\"})\ns( 227, {max = 200, min = 200, name = \"battery\"})\ns( 228, {max = 0, min = 0, name = \"explosives\"})\ns( 231, {max = 0, min = 0, name = \"crude-oil-barrel\"})\ns( 232, {max = 0, min = 0, name = \"heavy-oil-barrel\"})\ns( 233, {max = 0, min = 0, name = \"light-oil-barrel\"})\ns( 234, {max = 0, min = 0, name = \"lubricant-barrel\"})\ns( 235, {max = 0, min = 0, name = \"petroleum-gas-barrel\"})\ns( 236, {max = 0, min = 0, name = \"sulfuric-acid-barrel\"})\ns( 237, {max = 0, min = 0, name = \"water-barrel\"})\ns( 241, {max = 0, min = 0, name = \"copper-cable\"})\ns( 242, {max = 0, min = 0, name = \"iron-stick\"})\ns( 243, {max = 0, min = 0, name = \"iron-gear-wheel\"})\ns( 244, {max = 0, min = 0, name = \"empty-barrel\"})\ns( 245, {max = 200, min = 200, name = \"electronic-circuit\"})\ns( 246, {max = 200, min = 200, name = \"advanced-circuit\"})\ns( 247, {max = 100, min = 100, name = \"processing-unit\"})\ns( 248, {max = 0, min = 0, name = \"engine-unit\"})\ns( 249, {max = 0, min = 0, name = \"electric-engine-unit\"})\ns( 250, {max = 0, min = 0, name = \"flying-robot-frame\"})\ns( 251, {max = 0, min = 0, name = \"rocket-control-unit\"})\ns( 252, {max = 0, min = 0, name = \"low-density-structure\"})\ns( 253, {max = 10, min = 10, name = \"rocket-fuel\"})\ns( 254, {max = 0, min = 0, name = \"nuclear-fuel\"})\ns( 255, {max = 0, min = 0, name = \"uranium-235\"})\ns( 256, {max = 0, min = 0, name = \"uranium-238\"})\ns( 257, {max = 0, min = 0, name = \"uranium-fuel-cell\"})\ns( 258, {max = 0, min = 0, name = \"used-up-uranium-fuel-cell\"})\ns( 261, {max = 0, min = 0, name = \"automation-science-pack\"})\ns( 262, {max = 0, min = 0, name = \"logistic-science-pack\"})\ns( 263, {max = 0, min = 0, name = \"military-science-pack\"})\ns( 264, {max = 0, min = 0, name = \"chemical-science-pack\"})\ns( 265, {max = 0, min = 0, name = \"production-science-pack\"})\ns( 266, {max = 0, min = 0, name = \"utility-science-pack\"})\ns( 267, {max = 0, min = 0, name = \"space-science-pack\"})\n</code></pre>"},{"location":"lua_scripts/find%20empty%20labs/","title":"Find empty labs","text":"./lua/find empty labs.lua<pre><code>/silent-command\n--[[\n  Find labs that lack materials for research\n]]\nlocal x = ''\nfor k,v in pairs(game.player.surface.find_entities_filtered({name='lab'})) do \n  f = v.get_inventory(defines.inventory.lab_input).get_item_count \n  if f('automation-science-pack')==0 or \n      f('logistic-science-pack')==0 or \n      f('military-science-pack')==0 or \n      f('chemical-science-pack')==0 or \n      f('production-science-pack')==0 or \n      f('utility-science-pack')==0 or \n      f('space-science-pack')==0 then \n    x = x .. ' [gps='..v.position.x..','..v.position.y..']'\n  end \nend\ngame.print(\"Labs missing packs: \" .. x)\n</code></pre>"},{"location":"lua_scripts/find%20entities%20with%20zero%20finished%20products/","title":"Find entities with zero finished products","text":"./lua/find entities with zero finished products.lua<pre><code>/silent-command \n--[[\nFind and ping all entities that have zero finished products\n]]\nlocal found_ents = {} \nlocal ents = {\"assembling-machine-1\", \"assembling-machine-2\", \"assembling-machine-3\", \"stone-furnace\", \"steel-furnace\", \"electric-furnace\", \"chemical-plant\", \"oil-refinery\", \"centrifuge\"} \nfor _, entity in pairs(game.player.surface.find_entities_filtered({name = ents})) do \n    if entity.products_finished  == 0 then \n      if not found_ents[entity.name] then found_ents[entity.name] = {} end \n        table.insert(found_ents[entity.name], {x = entity.position.x, y = entity.position.y}) \n    end \nend \n\nif not next(found_ents) then \n  game.print(\"No entities with zero finished products found!\") \nelse \n  game.print(\"Entities with zero products finished: \") \n  for loc_name, cord_sets in pairs(found_ents) do \n    local x = \"\"\n    for _, cords in pairs(cord_sets) do \n      x = x .. \" [gps=\"..cords.x..\",\"..cords.y..\"]\" \n    end \n    game.print(\"[img=item.\"..loc_name..\"]\"..x..\"\\n\") \n  end \nend \n</code></pre>"},{"location":"lua_scripts/find%20ghost%20solar/","title":"Find ghost solar","text":"./lua/find ghost solar.lua<pre><code>/silent-command \n--[[\n  Find solar pannel ghosts\n]]\nr = '' \nfor k,v in pairs(game.player.surface.find_entities_filtered({ghost_type={'solar-panel'}})) do \n  r = r .. '[gps=' .. v.position.x .. ',' .. v.position.y .. ']' \nend \ngame.print(r)\n</code></pre>"},{"location":"lua_scripts/find%20nopath%20trains/","title":"Find nopath trains","text":"./lua/find nopath trains.lua<pre><code>/silent-command\n--[[\n  no path station finder\n]]\nlocal st = {}\nfor k, v in pairs(game.player.surface.get_trains()) do\n    if v.state == defines.train_state.no_path then\n        game.print(\"[train=\" .. v.locomotives.front_movers[1].unit_number .. \"]\")\n        st[v.schedule.records[v.schedule.current].station] = true\n    end\nend\ngame.print(\"no path stations:\")\ngame.print(game.table_to_json(st))\nlocal found, out = 0, \"\\n\"\nfor _, e in pairs(game.player.surface.find_entities_filtered {type = {\"train-stop\"}}) do\n    for st_name, _ in pairs(st) do\n        if st_name == e.backer_name then\n            if e.trains_limit &gt; e.trains_count then\n                found = found + 1\n                out = out .. found .. \":[gps=\" .. e.position.x .. \",\" .. e.position.y .. \"] \"\n            end\n        end\n    end\nend\ngame.player.print(out ~= \"\" and out or \"None found.\")\n</code></pre>"},{"location":"lua_scripts/find%20recipe/","title":"Find recipe","text":"./lua/find recipe.lua<pre><code>/silent-command\n--[[\n  Finds the location on the map where there is an assember crafting select item.\n  Replace 'spidertron' with your searched item to find its location.\n--]]\nrecipe = 'spidertron'\n\nfor k,v in pairs(game.player.surface.find_entities_filtered(\n    {name={'assembling-machine-1', 'assembling-machine-2', 'assembling-machine-3', 'chemical-plant', 'refinery'}}))\ndo\n  if\n    v.get_recipe() ~= nil and\n    v.get_recipe().name ~= nil and\n    v.get_recipe().name == recipe then\n\n    game.print(v.get_recipe().name .. ': [gps='.. v.position.x .. ', '.. v.position.y .. ']')\n\n  end\nend\n</code></pre>"},{"location":"lua_scripts/find_nearest_ore/","title":"Find nearest ore","text":"./lua/find_nearest_ore.lua<pre><code>/c \nmin = 1000000000 \nfor k,c in pairs(game.player.surface.find_entities_filtered{name=\"coal\"}) do \n  d = ((c.position.x * c.position.x) + (c.position.y * c.position.y)) \n  if d &lt; min then \n    min = d \n    game.print('new min [gps'..'='..c.position.x..','..c.position.y..']: ' .. d) \n  end \nend\n</code></pre>"},{"location":"lua_scripts/get%20trains%20pathing%20to%20station/","title":"Get trains pathing to station","text":"./lua/get trains pathing to station.lua<pre><code>/silent-command\nl = ''\nups = 60 * game.speed\nstop = game.player.selected\ns = stop.position\nfor k,v in pairs(game.player.surface.get_trains()) do\n  if v.path_end_stop ~= nil then\n    p = v.path_end_stop.position\n    if p.x == s.x and p.y == s.y then\n      l = l .. '[train=' .. v.locomotives.front_movers[1].unit_number ..\n        '] (T -' .. string.format(\"%.2f\", (v.path.total_distance - v.path.travelled_distance)/(298.1/3.6)*(60/ups)) .. ' wall seconds)'\n    end\n  end\nend\ngame.print('Trains headed to [' .. stop.backer_name .. '] at [gps=' .. s.x .. ',' .. s.y .. ']: ' .. l)\n</code></pre>"},{"location":"lua_scripts/get_inventory_filters/","title":"Get inventory filters","text":"./lua/get_inventory_filters.lua<pre><code>/silent-command\n--[[\n  Saves what invtory filters you have and exports them into a txt file named \"inventory_get_filter.txt\"\n]]\nlocal a=\"/silent-command\\n\"; \nlocal inventory = game.player.get_main_inventory();\nfor k = 1, #inventory do\n    if inventory.get_filter(k)~=nil then\n        a=a ..string.format(\"game.player.get_main_inventory().set_filter(%d, \\\"%s\\\");\\n\", k, inventory.get_filter(k) );\n    end;\nend;\ngame.write_file(\"inventory_get_filter.txt\",a)\n</code></pre>"},{"location":"lua_scripts/groups_of_requests/","title":"Groups of requests","text":"./lua/groups_of_requests.lua<pre><code>/silent-command\nfunction checking_schedule(train, station_name)\n    schedule = train.schedule\n    if schedule then\n        records = schedule.records\n        for i = 1, #records do\n            if records[i].station == station_name then\n                return true\n            end\n        end\n    end\n    return false\nend\n\nfunction change_request_for_availability_of_items(request, items)\n    for i = 1, #request do\n        if not items[request[i].signal.name] then\n            request[i].count = 0\n        end\n    end\nend\n\nfunction process_group_of_requests(requests)\n    for _, train in pairs(force.get_trains()) do\n        if train.manual_mode == false then\n            for j = 1, #requests do\n                if checking_schedule(train, requests[j].station_name) then\n                    for k, v in pairs(train.get_contents()) do\n                        requests[j].available_items[k] = (v &gt; 0)\n                    end\n                end\n            end\n        end\n    end\n\n    for j = 1, #requests do\n        requests[j].available_items[\"signal-G\"] = true\n        for _, v in pairs(requests[j].requests) do\n            change_request_for_availability_of_items(v, requests[j].available_items)\n        end\n    end\n\n    for _, entity in pairs(\n        game.surfaces[\"nauvis\"].find_entities_filtered {name = {\"constant-combinator\"}, force = force}\n    ) do\n        control_behavior = entity.get_control_behavior()\n        if control_behavior then\n            local par = control_behavior.parameters\n            for i = 1, #par do\n                if par[i].signal.name == \"signal-G\" then\n                    local c = par[i][\"count\"]\n                    for j = 1, #requests do\n                        if requests[j].requests[c] ~= nil then\n                            entity.get_control_behavior().parameters = requests[j].requests[c]\n                            goto go_next\n                        end\n                    end\n                end\n            end\n        end\n        ::go_next::\n    end\nend\n\nfunction request_clone(request)\n    local new_request = {}\n    for i = 1, #request do\n        new_request[i] = {\n            signal = {type = request[i].signal.type, name = request[i].signal.name},\n            count = request[i].count,\n            index = request[i].index\n        }\n    end\n    return new_request\nend\n\nfunction requests_clone(requests)\n    local new_requests = {}\n    new_requests.available_items = {}\n    new_requests.station_name = requests.station_name\n    new_requests.requests = {}\n    for k, v in pairs(requests.requests) do\n        new_requests.requests[k] = request_clone(v)\n    end\n    return new_requests\nend\n\nlocal mine_group_1 = -100001\nlocal mine_group_2 = -100002\nlocal mine_group_3 = -100003\n\nlocal flamewall_group_1 = -100010\nlocal flamewall_group_2 = -100011\n\nmine_requests = {\n    available_items = {},\n    station_name = \"[L] MINE BUILDER [item=electric-mining-drill]\",\n    requests = {\n        [mine_group_1] = {\n            {signal = {type = \"item\", name = \"electric-mining-drill\"}, count = 30, index = 1},\n            {signal = {type = \"item\", name = \"speed-module\"}, count = 20, index = 2},\n            {signal = {type = \"item\", name = \"rail-signal\"}, count = 5, index = 3},\n            {signal = {type = \"item\", name = \"big-electric-pole\"}, count = 5, index = 4},\n            {signal = {type = \"item\", name = \"medium-electric-pole\"}, count = 10, index = 5},\n            {signal = {type = \"item\", name = \"small-electric-pole\"}, count = 10, index = 6},\n            {signal = {type = \"item\", name = \"rail-chain-signal\"}, count = 5, index = 7},\n            {signal = {type = \"item\", name = \"rail\"}, count = 50, index = 8},\n            {signal = {type = \"item\", name = \"train-stop\"}, count = 2, index = 9},\n            {signal = {type = \"item\", name = \"storage-tank\"}, count = 5, index = 10},\n            {signal = {type = \"item\", name = \"pipe-to-ground\"}, count = 20, index = 11},\n            {signal = {type = \"item\", name = \"landfill\"}, count = 50, index = 12},\n            {signal = {type = \"item\", name = \"cliff-explosives\"}, count = 20, index = 13},\n            {signal = {type = \"item\", name = \"repair-pack\"}, count = 50, index = 14},\n            {signal = {type = \"item\", name = \"pump\"}, count = 5, index = 15},\n            {signal = {type = \"item\", name = \"pipe\"}, count = 30, index = 16},\n            {signal = {type = \"item\", name = \"beacon\"}, count = 10, index = 17},\n            {signal = {type = \"item\", name = \"speed-module-3\"}, count = 20, index = 18},\n            {signal = {type = \"item\", name = \"logistic-chest-storage\"}, count = 3, index = 19},\n            {signal = {type = \"virtual\", name = \"signal-G\"}, count = mine_group_1, index = 20}\n        },\n        [mine_group_2] = {\n            {signal = {type = \"item\", name = \"logistic-chest-buffer\"}, count = 3, index = 1},\n            {signal = {type = \"item\", name = \"logistic-chest-active-provider\"}, count = 3, index = 2},\n            {signal = {type = \"item\", name = \"stack-inserter\"}, count = 20, index = 3},\n            {signal = {type = \"item\", name = \"stack-filter-inserter\"}, count = 20, index = 4},\n            {signal = {type = \"item\", name = \"decider-combinator\"}, count = 5, index = 5},\n            {signal = {type = \"item\", name = \"roboport\"}, count = 2, index = 6},\n            {signal = {type = \"item\", name = \"radar\"}, count = 2, index = 7},\n            {signal = {type = \"item\", name = \"fast-inserter\"}, count = 10, index = 8},\n            {signal = {type = \"item\", name = \"arithmetic-combinator\"}, count = 5, index = 9},\n            {signal = {type = \"item\", name = \"constant-combinator\"}, count = 5, index = 10},\n            {signal = {type = \"item\", name = \"programmable-speaker\"}, count = 3, index = 11},\n            {signal = {type = \"item\", name = \"transport-belt\"}, count = 100, index = 12},\n            {signal = {type = \"item\", name = \"fast-transport-belt\"}, count = 100, index = 13},\n            {signal = {type = \"item\", name = \"express-transport-belt\"}, count = 100, index = 14},\n            {signal = {type = \"item\", name = \"wooden-chest\"}, count = 15, index = 15},\n            {signal = {type = \"item\", name = \"splitter\"}, count = 5, index = 16},\n            {signal = {type = \"item\", name = \"fast-splitter\"}, count = 5, index = 17},\n            {signal = {type = \"item\", name = \"express-splitter\"}, count = 5, index = 18},\n            {signal = {type = \"item\", name = \"underground-belt\"}, count = 25, index = 19},\n            {signal = {type = \"virtual\", name = \"signal-G\"}, count = mine_group_2, index = 20}\n        },\n        [mine_group_3] = {\n            {signal = {type = \"item\", name = \"fast-underground-belt\"}, count = 25, index = 1},\n            {signal = {type = \"item\", name = \"express-underground-belt\"}, count = 25, index = 2},\n            {signal = {type = \"item\", name = \"steel-chest\"}, count = 15, index = 3},\n            {signal = {type = \"item\", name = \"laser-turret\"}, count = 20, index = 4},\n            {signal = {type = \"item\", name = \"pumpjack\"}, count = 2, index = 5},\n            {signal = {type = \"item\", name = \"substation\"}, count = 1, index = 6},\n            {signal = {type = \"item\", name = \"filter-inserter\"}, count = 1, index = 7},\n            {signal = {type = \"item\", name = \"roboport\"}, count = 1, index = 8},\n            {signal = {type = \"virtual\", name = \"signal-G\"}, count = mine_group_3, index = 20}\n        }\n    }\n}\n\nflamewall_requests = {\n    available_items = {},\n    station_name = \"Dropoff Flamewall Supplies\",\n    requests = {\n        [flamewall_group_1] = {\n            {signal = {type = \"item\", name = \"artillery-turret\"}, count = 2, index = 1},\n            {signal = {type = \"item\", name = \"crude-oil-barrel\"}, count = 50, index = 2},\n            {signal = {type = \"item\", name = \"flamethrower-turret\"}, count = 10, index = 3},\n            {signal = {type = \"item\", name = \"assembling-machine-3\"}, count = 1, index = 4},\n            {signal = {type = \"item\", name = \"speed-module-3\"}, count = 4, index = 5},\n            {signal = {type = \"item\", name = \"constant-combinator\"}, count = 25, index = 6},\n            {signal = {type = \"item\", name = \"arithmetic-combinator\"}, count = 25, index = 7},\n            {signal = {type = \"item\", name = \"decider-combinator\"}, count = 25, index = 8},\n            {signal = {type = \"item\", name = \"express-transport-belt\"}, count = 50, index = 9},\n            {signal = {type = \"item\", name = \"small-lamp\"}, count = 25, index = 10},\n            {signal = {type = \"item\", name = \"stack-filter-inserter\"}, count = 25, index = 11},\n            {signal = {type = \"item\", name = \"filter-inserter\"}, count = 25, index = 12},\n            {signal = {type = \"item\", name = \"stack-inserter\"}, count = 25, index = 13},\n            {signal = {type = \"item\", name = \"logistic-chest-storage\"}, count = 10, index = 14},\n            {signal = {type = \"item\", name = \"logistic-chest-requester\"}, count = 10, index = 15},\n            {signal = {type = \"item\", name = \"logistic-chest-passive-provider\"}, count = 10, index = 16},\n            {signal = {type = \"item\", name = \"logistic-chest-active-provider\"}, count = 10, index = 17},\n            {signal = {type = \"item\", name = \"substation\"}, count = 25, index = 18},\n            {signal = {type = \"item\", name = \"big-electric-pole\"}, count = 25, index = 19},\n            {signal = {type = \"virtual\", name = \"signal-G\"}, count = flamewall_group_1, index = 20}\n        },\n        [flamewall_group_2] = {\n            {signal = {type = \"item\", name = \"roboport\"}, count = 10, index = 1},\n            {signal = {type = \"item\", name = \"repair-pack\"}, count = 100, index = 2},\n            {signal = {type = \"item\", name = \"laser-turret\"}, count = 100, index = 3},\n            {signal = {type = \"item\", name = \"stone-wall\"}, count = 100, index = 4},\n            {signal = {type = \"item\", name = \"gate\"}, count = 10, index = 5},\n            {signal = {type = \"item\", name = \"radar\"}, count = 5, index = 6},\n            {signal = {type = \"item\", name = \"rail\"}, count = 100, index = 7},\n            {signal = {type = \"item\", name = \"rail-signal\"}, count = 25, index = 8},\n            {signal = {type = \"item\", name = \"rail-chain-signal\"}, count = 10, index = 9},\n            {signal = {type = \"item\", name = \"construction-robot\"}, count = 50, index = 10},\n            {signal = {type = \"item\", name = \"logistic-robot\"}, count = 25, index = 11},\n            {signal = {type = \"item\", name = \"landfill\"}, count = 50, index = 12},\n            {signal = {type = \"item\", name = \"cliff-explosives\"}, count = 5, index = 13},\n            {signal = {type = \"item\", name = \"train-stop\"}, count = 2, index = 14},\n            {signal = {type = \"item\", name = \"pipe\"}, count = 100, index = 15},\n            {signal = {type = \"item\", name = \"pipe-to-ground\"}, count = 50, index = 16},\n            {signal = {type = \"virtual\", name = \"signal-G\"}, count = flamewall_group_2, index = 20}\n        }\n    }\n}\n\nfunction groups_of_requests(EventData)\n    process_group_of_requests({requests_clone(mine_requests), requests_clone(flamewall_requests)})\nend\n\nforce = game.player.force\nscript.on_nth_tick(3600, groups_of_requests)\n</code></pre>"},{"location":"lua_scripts/hack%20roboports/","title":"Hack roboports","text":"./lua/hack roboports.lua<pre><code>/silent-command\n--[[\n  hack roboports\n  take a BP or a BOOK in the cursor and execute the script\n  I recommend doing it on the BPs in the inventory\n]]\nlocal player = game.player\n\nlocal function table_concat(t1, t2)\n    for i = 1, #t2 do\n        t1[#t1 + 1] = t2[i]\n    end\n    return t1\nend\n\nlocal function get_blueprint(bp)\n    --[[\n        returns an array of bps from the entire book\n    ]]\n    if not (bp and bp.valid and bp.valid_for_read) then\n        return nil\n    elseif bp.is_blueprint_book then\n        local bps = {}\n        local inv = bp.get_inventory(defines.inventory.item_main)\n        for i = 1, #inv do\n            table_concat(bps, get_blueprint(inv[i]))\n        end\n        return bps\n    elseif bp.is_blueprint then\n        return {bp}\n    else\n        return nil\n    end\nend\n\nif player.is_cursor_blueprint() then\n    local bps = get_blueprint(player.cursor_stack)\n    for _, bp in pairs(bps) do\n        if bp then\n            local ents = bp.get_blueprint_entities()\n            if ents then\n                for _, e in pairs(ents) do\n                    --[game.print(game.table_to_json(e))]\n                    if e[\"name\"] == \"roboport\" then\n                        e[\"items\"] = {[\"construction-robot\"] = 5}\n                    end\n                end\n                bp.set_blueprint_entities(ents)\n            end\n        end\n    end\nend\n</code></pre>"},{"location":"lua_scripts/inventory_get_filter/","title":"Inventory get filter","text":"./lua/inventory_get_filter.lua<pre><code>/silent-command\n--[[\n  Filter the first slots in a players inventory to specific items\n]]\ngame.player.get_main_inventory().set_filter(1, \"solar-panel-equipment\");\ngame.player.get_main_inventory().set_filter(2, \"fusion-reactor-equipment\");\ngame.player.get_main_inventory().set_filter(3, \"battery-equipment\");\ngame.player.get_main_inventory().set_filter(4, \"battery-mk2-equipment\");\ngame.player.get_main_inventory().set_filter(5, \"belt-immunity-equipment\");\ngame.player.get_main_inventory().set_filter(6, \"exoskeleton-equipment\");\ngame.player.get_main_inventory().set_filter(7, \"personal-roboport-equipment\");\ngame.player.get_main_inventory().set_filter(8, \"personal-roboport-mk2-equipment\");\ngame.player.get_main_inventory().set_filter(9, \"night-vision-equipment\");\ngame.player.get_main_inventory().set_filter(11, \"energy-shield-equipment\");\ngame.player.get_main_inventory().set_filter(12, \"energy-shield-mk2-equipment\");\ngame.player.get_main_inventory().set_filter(13, \"personal-laser-defense-equipment\");\ngame.player.get_main_inventory().set_filter(14, \"discharge-defense-equipment\");\ngame.player.get_main_inventory().set_filter(15, \"discharge-defense-remote\");\ngame.player.get_main_inventory().set_filter(21, \"stone-wall\");\ngame.player.get_main_inventory().set_filter(22, \"gate\");\ngame.player.get_main_inventory().set_filter(23, \"gun-turret\");\ngame.player.get_main_inventory().set_filter(24, \"laser-turret\");\ngame.player.get_main_inventory().set_filter(25, \"flamethrower-turret\");\ngame.player.get_main_inventory().set_filter(26, \"artillery-turret\");\ngame.player.get_main_inventory().set_filter(27, \"artillery-targeting-remote\");\ngame.player.get_main_inventory().set_filter(28, \"radar\");\ngame.player.get_main_inventory().set_filter(29, \"spidertron\");\ngame.player.get_main_inventory().set_filter(30, \"spidertron-remote\");\n</code></pre>"},{"location":"lua_scripts/landfill%20undo/","title":"Landfill undo","text":"./lua/landfill undo.lua<pre><code>--[[\n  Truly undoes landfill. Regenerates the original chunks in a separate surface to see which water/\n  shore tiles used to be under the landfill, copies from those tiles, and cleans up afterwards.\n\n  Ends in an unterminated quote, intended to contain map pings.\n  Will select a box region around all pings.\n  Any number of pings 2+ will work, but it's most intuitive to ping 2 opposing corners, or 4 sides.\n  Insert pings into the command line, and then a closing quote \" before using.\n--]]\n\n/silent-command --[[ undo landfill 2.0 ]]\nlocal function bounding_box_from_gps_tags(s)\n  local a,b,c,d,m,M=1/0,1/0,-1/0,-1/0,math.min,math.max\n  for x,y in s:gmatch(\"%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+)%]\")do a=m(a,x+0)b=m(b,y+0)c=M(c,x+0)d=M(d,y+0)end\n  return{left_top={x=a,y=b},right_bottom={x=c,y=d}}\nend\nlocal function count_in(t, s)\n  t[s] = (t[s] or 0) + 1\nend\nlocal function go2(gps)\n  local surface = game.player.surface\n  local s2 = game.create_surface(\"undo_landfill\", surface.map_gen_settings)\n  local bb = bounding_box_from_gps_tags(gps)\n  local new_water,counts = {},{}\n  for _,t in pairs(surface.find_tiles_filtered{area=bb, name=\"landfill\"}) do\n    local pos = t.position\n    if surface.count_entities_filtered{collision_mask={\"ghost-layer\",\"object-layer\",\"player-layer\",\"rail-layer\"}, area={left_top=pos, right_bottom={pos.x+1,pos.y+1}}} &gt; 0 then\n      count_in(counts, \"skipped\")\n    else\n      new_water[#new_water+1] = { position=pos, name=\"\" }\n      s2.request_to_generate_chunks(pos, 0)\n    end\n  end\n  s2.force_generate_chunk_requests()\n  for _,nw in pairs(new_water) do\n    nw.name = s2.get_tile(nw.position.x, nw.position.y).name\n    count_in(counts, nw.name)\n  end\n  surface.set_tiles(new_water)\n  game.player.print(\"undo landfill:\")\n  for name,count in pairs(counts) do\n    game.player.print(\"    \"..name..\": \"..count)\n  end\nend\nlocal function go(...)\n  local ok, result = pcall(go2, ...)\n  if not ok then game.player.print(result) end\n  if game.get_surface(\"undo_landfill\") then game.delete_surface(\"undo_landfill\") end\nend\ngo \"\n</code></pre>"},{"location":"lua_scripts/launch%20all%20trains%20/","title":"Launch all trains","text":"./lua/launch all trains .lua<pre><code>/silent-command\n--[[ \n  Launches all trains on the map / sets them to automatic mode\n]]\n/silent-command \nfor _,t in pairs(game.player.force.get_trains()) do t.manual_mode = false end \n</code></pre>"},{"location":"lua_scripts/launch%20trains/","title":"Launch trains","text":"./lua/launch trains.lua<pre><code>/silent-command\n--[[ \n  Launch or stop trains. Default launches all trains in region.\n  Change 'go' to 'stop' at the end of the script to stop trains.\n\n  Ends in an unterminated quote, intended to contain map pings.\n  Will select a box region around all pings.\n  Any number of pings 2+ will work, but it's most intuitive to ping 2 opposing corners, or 4 sides.\n  Insert pings into the command line, and then a closing quote \" before using.\n--]]\nlocal function bounding_box_from_gps_tags(s)\n  local a,b,c,d,m,M=1/0,1/0,-1/0,-1/0,math.min,math.max\n  for x,y in s:gmatch(\"%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+)%]\")do a=m(a,x+0)b=m(b,y+0)c=M(c,x+0)d=M(d,y+0)end\n  return{left_top={x=a,y=b},right_bottom={x=c,y=d}}\nend\nlocal function go(gps,stop)\n  local surface = game.player.surface\n  local bb = bounding_box_from_gps_tags(gps)\n  local count = 0\n  for _,loco in pairs(surface.find_entities_filtered{type=\"locomotive\",area=bb}) do\n    if loco.train.manual_mode and not stop then\n      loco.train.manual_mode = false\n      count = count + 1\n    end\n    if stop and not loco.train.manual_mode then\n      loco.train.manual_mode = true\n      count = count + 1\n    end\n  end\n  if not stop then\n    game.player.print(\"Launched \" ..count.. \" trains.\")\n  else\n    game.player.print(\"Stopped \" ..count.. \" trains.\")\n  end\nend\nlocal function stop(gps) go(gps,true) end\ngo \"\n</code></pre>"},{"location":"lua_scripts/module%20everything/","title":"Module everything","text":"./lua/module everything.lua<pre><code>/silent-command --[[ module everything --]]\nlocal function box_on_surface(s)\n  local a,b,c,d,m,M,n=1/0,1/0,-1/0,-1/0,math.min,math.max\n  for x,y,z in s:gmatch(\"%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+),?([^%]]*)%]\")do a=m(a,x+0)b=m(b,y+0)c=M(c,x+0)d=M(d,y+0)n=z end\n  return{left_top={x=a,y=b},right_bottom={x=c,y=d}}, game.get_surface(#n&gt;0 and n or 1)\nend\nlocal function proxy_for(e)\n  return e.surface.find_entity(\"item-request-proxy\", e.position)\nend\n--[[ allowed[module][recipe] + caches result --]]\nlocal allowed = setmetatable({}, {\n  __index = function(mytable, module_name)\n    local table_of_allowed = {}\n    for _,allowed_recipe in pairs(game.item_prototypes[module_name].limitations) do\n      table_of_allowed[allowed_recipe] = true\n    end\n    rawset(mytable, module_name, table_of_allowed)\n    return table_of_allowed\n  end\n})\nlocal function add_to(t, add_me)\n  for k,v in pairs(add_me) do\n    t[k] = (t[k] or 0) + v\n  end\nend\nlocal function total_count(t)\n  local total = 0\n  for _,v in pairs(t) do\n    total = total + v\n  end\n  return total\nend\nlocal function speed_if_cant_prod(recipe, modules)\n  local substitutes = {}\n  for mod,_ in pairs(modules) do\n    if not allowed[mod][recipe] then\n      local n = modules[mod]\n      modules[mod] = nil\n      local substitute_mod = mod:gsub(\"productivity%-\", \"speed-\")\n      if substitute_mod == mod then\n        substitute_mod = \"speed-module\"\n      end\n      substitutes[substitute_mod] = (substitutes[substitute_mod] or 0) + n\n    end\n  end\n  add_to(modules, substitutes)\nend\nlocal function main(types_to_mod, gps)\n  local n_modules, n_machines, types_for_search = 0,0,{}\n  for typename,_ in pairs(types_to_mod) do\n    table.insert(types_for_search, typename)\n  end\n  local box, surface = box_on_surface(gps)\n  for _,e in pairs(surface.find_entities_filtered{area=box,type=types_for_search}) do\n    local totals = {}\n    local mod_inv = e.get_module_inventory()\n    add_to(totals, mod_inv.get_contents())\n    local req = proxy_for(e)\n    if req then\n      add_to(totals, req.item_requests)\n    end\n    local unused = #mod_inv - total_count(totals)\n    if unused &gt; 0 then\n      local new_reqs = { [types_to_mod[e.type]] = unused }\n      if e.prototype.crafting_categories and e.get_recipe() then\n        speed_if_cant_prod(e.get_recipe().name, new_reqs)\n      end\n      if req then\n        add_to(new_reqs, req.item_requests)\n        req.item_requests = new_reqs\n      else\n        e.surface.create_entity{name=\"item-request-proxy\", position=e.position, force=e.force, target=e, modules=new_reqs}\n      end\n      n_modules = n_modules + unused\n      n_machines = n_machines + 1\n    end\n  end\n  --[[ again, for ghosts --]]\n  for _,e in pairs(surface.find_entities_filtered{area=box,ghost_type=types_for_search}) do\n    local unused = e.ghost_prototype.module_inventory_size - total_count(e.item_requests)\n    if unused &gt; 0 then\n      local new_reqs = { [types_to_mod[e.ghost_type]] = unused }\n      if e.ghost_prototype.crafting_categories and e.get_recipe() then\n        speed_if_cant_prod(e.get_recipe().name, new_reqs)\n      end\n      add_to(new_reqs, e.item_requests)\n      e.item_requests = new_reqs\n      n_modules = n_modules + unused\n      n_machines = n_machines + 1\n    end\n  end\n  game.print(string.format(\"Requesting %d modules in %d machines.\", n_modules, n_machines))\nend\nlocal function go(gps) main({\n  [\"assembling-machine\"]=\"productivity-module\",\n  furnace=\"productivity-module\",\n  beacon=\"speed-module\",\n  [\"mining-drill\"]=\"effectivity-module\"\n}, gps) end\ngo \"\n</code></pre>"},{"location":"lua_scripts/morsk%27s%20shitty%20station%20finder/","title":"Morsk's shitty station finder","text":"./lua/morsk's shitty station finder.lua<pre><code>/silent-command\n--[[\n  shitty station finder\n]]\nlocal function find()\n  local found,out = 0,\" limit == 1 \\n \"\n  local found1,out1 = 0,\" limit &gt; 1 \\n \"\n  for _,e in pairs(game.player.surface.find_entities_filtered{type = {\"train-stop\"}}) do\n    local c = e.get_control_behavior()\n    if c\n       and (c.connect_to_logistic_network\n            or (c.enable_disable\n                and (c.get_circuit_network(defines.wire_type.red)\n                     or c.get_circuit_network(defines.wire_type.green))\n               )\n           )\n    then\n        if e.trains_limit &gt; 1 then\n            found1 = found1 + 1\n            out1 = out1..found1..\":[gps=\"..e.position.x..\",\"..e.position.y..\"] \"\n        else\n            found = found + 1\n            out = out..found..\":[gps=\"..e.position.x..\",\"..e.position.y..\"] \"\n        end\n    end\n  end\n  game.player.print( out ~= \"\" and out or \"None found.\")\n  game.player.print( out1 ~= \"\" and out1 or \"None found.\")\nend\nfind()\n</code></pre>"},{"location":"lua_scripts/player_set_filter_by%20default/","title":"Player set filter by default","text":"./lua/player_set_filter_by default.lua<pre><code>/silent-command\n--[[\n  Filter the bottom most slots in a players inventory to specific items\n]]\nlocal index = #game.player.get_main_inventory()\ngame.player.get_main_inventory().set_filter(index, \"solar-panel-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"fusion-reactor-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"battery-mk2-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"belt-immunity-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"exoskeleton-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"personal-roboport-mk2-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"personal-laser-defense-equipment\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"laser-turret\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"artillery-targeting-remote\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"spidertron\"); index = index - 1;\ngame.player.get_main_inventory().set_filter(index, \"spidertron-remote\"); index = index - 1;\n</code></pre>"},{"location":"lua_scripts/print%20items%20launched/","title":"Print items launched","text":"./lua/print items launched.lua<pre><code>/c for k,v in pairs(game.player.force.items_launched) do game.print(k .. ' ' .. v) end\n</code></pre>"},{"location":"lua_scripts/print%20research%20progress/","title":"Print research progress","text":"./lua/print research progress.lua<pre><code>/c \ncount = game.player.force.current_research.research_unit_count\nprog = math.floor(game.player.force.research_progress * count)\ngame.player.print(prog .. ' / ' .. count)\n</code></pre>"},{"location":"lua_scripts/print%20solar%20build%20queue/","title":"Print solar build queue","text":"./lua/print solar build queue.lua<pre><code>/c \n--[[\n  Count how many ghost solar pannels and ghost accumulators\n]]\ngame.print(#game.player.surface.find_entities_filtered({ghost_type={'solar-panel','accumulator'}}))\n</code></pre>"},{"location":"lua_scripts/protect%20crash%20site/","title":"Protect crash site","text":"./lua/protect crash site.lua<pre><code>--[[\n  Make the crash site as an indestructible object.\n\n  Since this is probably the first command on the map, make sure to enable commands:\n--]]\n/config set allow-commands admins-only\n\n--[[\n  And then the command:\n--]]\n\n/silent-command --[[ protect crash site --]]\nlocal counts = {}\nfor _,e in pairs(game.player.surface.find_entities({{-64, -32}, {32, 32}})) do\n  if e.name:match(\"^crash%-site\") then\n    e.minable = false\n    e.destructible = false\n    counts[e.name] = (counts[e.name] or 0) + 1\n  end\nend\ngame.player.print(\"protected:\")\nfor name,count in pairs(counts) do\n  game.player.print(\"    \"..name..\": \"..count)\nend\n</code></pre>"},{"location":"lua_scripts/restart%20partially%20filled%20mining%20trains/","title":"Restart partially filled mining trains","text":"./lua/restart partially filled mining trains.lua<pre><code>/c \n--[[ \n  Returns trains to their first station on its schedule if the train has a station that begins with \"[Exit\"\n]]\nfor _,ent in pairs (game.player.force.get_trains()) do      \n    if ent.station then          \n        local st = ent.schedule.records[ent.schedule.current].station         \n        if string.sub(st, 1, 5) == \"[Exit\" then             \n            local loco = ent.locomotives.front_movers[1]             \n            ent.go_to_station(1)         \n        end     \n    end \nend\n</code></pre>"},{"location":"lua_scripts/scan_player_inventories/","title":"Scan player inventories","text":"./lua/scan_player_inventories.lua<pre><code>/c  \n\nlocal x=''  \n\nfor k,v in pairs(game.players) do    \n  if not v.connected then     \n    inv = v.get_inventory(defines.inventory.character_main)     \n    if inv ~= nil then        \n      if inv.count_empty_stacks() ~= #inv then         \n        x = x .. ', ' .. v.name  .. ': ' .. inv.count_empty_stacks() .. '/' .. #inv\n      end     \n    else       \n      --[[ ragequit detector (could also be admin horseplay) --]]\n      x = x .. ', ' .. v.name .. ': ??/??'     \n    end   \n  end  \nend\n\ngame.print(x) \n</code></pre>"},{"location":"lua_scripts/solar%20tribute/","title":"Solar tribute","text":"./lua/solar tribute.lua<pre><code>/silent-command\n--[[ \n  Calculates who has places the most solar pannels on the map.\n]]\nlocal cred={}\nfor k,v in pairs(game.player.surface.find_entities_filtered(\n    {type={'solar-panel','accumulator'}})) do\n\n    local usr = v.last_user.name\n\n    if cred[usr] then\n        cred[usr] = cred[usr] + 1\n    else\n        cred[usr] = 1\n    end\nend\n\nfor k,v in pairs(cred) do game.print(k .. ' ' .. v) end\n</code></pre>"},{"location":"lua_scripts/solar_calc/","title":"Solar calc","text":"./lua/solar_calc.lua<pre><code>/silent-command\n--[[ \n  Calculates how many solar pannels are needed to transition away from nuke power. \n]]\nlocal stats = (game.player.selected \n  or game.player.surface.find_entities_filtered{type=\"electric-pole\",limit=1,position=game.player.position,radius=32}[1] \n  or error(\"Script needs mouseover of electric pole.\", 0)).electric_network_statistics \nlocal function printf(...) game.print(string.format(...)) end \nlocal function flow_count(name) \n  return stats.get_flow_count{name=name, input=false, precision_index=defines.flow_precision_index.ten_minutes, count=true} \nend \nlocal function go(args) \n  local accumulators, panels, turbines = flow_count(\"accumulator\"), flow_count(\"solar-panel\"), flow_count(\"steam-turbine\") \n  local solar_ratio = accumulators / panels \n  local excess_accumulators = accumulators - math.ceil(panels * 21 / 25) \n  printf(\"%d [img=item.accumulator] / %d [img=item.solar-panel] = %.4g    (%+d accumulators vs. ideal ratio)\", accumulators, panels, solar_ratio, excess_accumulators) \n  local usable_panels = math.min(panels, math.floor(accumulators * 25 / 21)) \n  local solarGW = usable_panels * 42 / 1000000 \n  local total = 0 \n  for i,_ in pairs(stats.input_counts) do \n    if game.entity_prototypes[i].type ~= 'accumulator' then \n      total = total + stats.get_flow_count{name=i, input=true, precision_index=defines.flow_precision_index.ten_minutes} \n    end \n  end \n  local totalGW = total * 60 / 1000000000 \n  printf(\"%d usable panels = %.2f GW usable power (total)\", usable_panels, solarGW) \n  printf(\"Required power (10 min. av.) = %.2f GW\", totalGW) \n  if turbines &gt; 0 then \n    local nuke_builds = turbines / args.nuke_bp_turbines \n    local nukeGW = nuke_builds * args.nuke_bp_gw \n    printf(\"%.4g nuke builds = %.2f GW\", nuke_builds, nukeGW) \n    if not args.goalGW then \n      args.goalGW = totalGW \n    end \n    local nukeGW_needed_for_goal = math.max(0, args.goalGW - solarGW) \n    local needed_nukes = math.ceil(nukeGW_needed_for_goal / args.nuke_bp_gw) \n    local lacking_nukes = needed_nukes - nuke_builds \n    printf(\"... need %d nuke builds (%+.4g vs. current) for goal %.2f GW\", needed_nukes, lacking_nukes, args.goalGW) \n  end \nend \ngo{nuke_bp_turbines=224, nuke_bp_gw=1.12, goalGW=nil}\n</code></pre>"},{"location":"lua_scripts/tree%20restoration/","title":"Tree restoration","text":"./lua/tree restoration.lua<pre><code>--[[\n  Many players don't understand that mass-clearing trees causes problems at endgame. With the\n  script, no one has to get upset if some new player does this without realizing. It's easy to use.\n\n  Ends in an unterminated quote, intended to contain map pings.\n  Will select a box region around all pings.\n  Any number of pings 2+ will work, but it's most intuitive to ping 2 opposing corners, or 4 sides.\n  Insert pings into the command line, and then a closing quote \" before using.\n\n  Will actually restore any chunk that touches the region, as the restore feature is chunk-based.\n--]]\n\n/silent-command --[[ HISTORICALLY ACCURATE TREE RESTORATION --]]\nlocal TREES = {}\nfor tree,_ in pairs(game.get_filtered_entity_prototypes({{filter=\"type\",type=\"tree\"}})) do\n  TREES[#TREES+1] = tree\nend\nlocal function bounding_box_from_gps_tags(s)\n  local x1 = math.huge\n  local y1,x2,y2 = x1,-x1,-x1\n  for x,y in s:gmatch(\"%[gps=([+-]?[%d%.]+),([+-]?[%d%.]+)%]\") do\n    x1 = math.min(x1, x+0)\n    y1 = math.min(y1, y+0)\n    x2 = math.max(x2, x+0)\n    y2 = math.max(y2, y+0)\n  end\n  return { left_top = {x=x1,y=y1}, right_bottom = {x=x2,y=y2} }\nend\nlocal function chunks_at_least_partly_inside(surface, bb)\n  local result = {}\n  for c in surface.get_chunks() do\n    if c.area.left_top.x &lt;= bb.right_bottom.x and\n       c.area.left_top.y &lt;= bb.right_bottom.y and\n       c.area.right_bottom.x &gt;= bb.left_top.x and\n       c.area.right_bottom.y &gt;= bb.left_top.y\n    then\n      result[#result+1] = c\n    end\n  end\n  return result\nend\nlocal function go(s)\n  local surface = game.player.surface\n  local chunks = chunks_at_least_partly_inside(surface, bounding_box_from_gps_tags(s))\n  if #chunks &gt; 0 then\n    surface.regenerate_entity(TREES, chunks)\n    game.print(\"Restored default trees to \" .. #chunks .. \" chunks.\")\n  end\nend\ngo \"\n</code></pre>"}]}